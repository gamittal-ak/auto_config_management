name: Deploy Akamai Config
on:
  push:
    branches:
      - feature/*  # Trigger when a feature branch is updated
    paths:
      - src/gamittal-compute.json  # Trigger only when this file is changed

jobs:
  update-rule-tree:
    runs-on: [self-hosted, demo_workflow]
    steps: # Uploads the updated property rule tree
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Create a new Property Version
      - name: Create a new Property Version
        run: |
          python src/create_a_new_property_version.py
      - name: update_rule_tree
        run: |
          python src/update_property_rule_tree.py 
  

  deploy-to-stage:
    runs-on: [self-hosted, demo_workflow]  # Use self-hosted runner on Linode
    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step : Deploy to Akamai Staging
      - name: Deploy to Akamai Staging
        run: |
          python src/activate_on_stage.py  

      # Step 5: Run test script
      - name: Run test script
        run: |
          python src/test_stage.py  # Replace with your test script
      # Ensure that this script checks for a 200 OK response
      # If the script returns a non-zero exit code, it will stop the job

  merge-and-deploy-to-prod:
    needs: deploy-to-stage  # This job only runs if the first job succeeds
    runs-on: [self-hosted, demo_workflow]  # Use self-hosted runner on Linode
    if: success()  # Only run if the previous job (test) was successful
    steps:
      # Step 1: Automatically merge feature branch into main
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Merge feature branch into main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge ${{ github.head_ref }}  # Merge the feature branch into main
          git push origin main  # Push the changes to the main branch

  deploy-to-prod:
    needs: merge-and-deploy-to-prod  # Only runs if the merge is successful
    runs-on: [self-hosted, demo_workflow]  # Use self-hosted runner on Linode
    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Deploy to Akamai Production
      - name: Deploy to Akamai Production
        run: |
          python src/deploy_prod.py  # Replace with your production deployment script
